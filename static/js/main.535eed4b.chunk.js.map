{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","changeSortType","setState","changeOrder","reset","this","goods","visibleGoods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","cn","map","good","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,eAAiB,SAACH,GAChB,EAAKI,SAAS,CAAEJ,cAPpB,EAUEK,YAAc,WACZ,EAAKD,UAAS,SAAAL,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gBAZzB,EAgBEI,MAAQ,WACN,EAAKF,SAAS,CACZJ,SAAUJ,EAASK,KACnBC,YAAY,KAnBlB,4CAuBE,WAAU,IAAD,OACP,EAAiCK,KAAKR,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WAEZM,EApDH,SACLA,EADK,GAGJ,IADCR,EACF,EADEA,SAAUE,EACZ,EADYA,WAENO,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAQZ,GACN,KAAKJ,EAASiB,SACZ,OAAOF,EAAEG,cAAcF,GAEzB,KAAKhB,EAASmB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OAEtB,QACE,OAAO,MAITd,GACFO,EAAaQ,UAGRR,EA6BSS,CACZrB,EACA,CAAEG,WAAUE,eAGd,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAM,EAAKlB,eAAeP,EAASiB,WAC5CM,UAAWG,IAAG,iBACZ,CAAE,WAAYtB,IAAaJ,EAASiB,WAJxC,iCASA,wBACEO,KAAK,SACLC,QAAS,kBAAM,EAAKlB,eAAeP,EAASmB,SAC5CI,UAAWG,IAAG,oBACZ,CAAE,WAAYtB,IAAaJ,EAASmB,SAJxC,4BASA,wBACEK,KAAK,SACLC,QAASd,KAAKF,YACdc,UAAWG,IAAG,oBACZ,CAAE,YAAapB,IAJnB,sBASEA,GAAcF,IAAaJ,EAASK,OACpC,wBACEoB,QAASd,KAAKD,MACdc,KAAK,SACLD,UAAU,4BAHZ,sBAUJ,6BACE,6BACGX,EAAMe,KAAI,SAACC,GAAD,OACT,oBAAe,UAAQ,OAAvB,SACGA,GADMA,iBA3EvB,GAAyBC,IAAMC,eCpD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.535eed4b.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype State = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: State,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a: string, b: string) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport class App extends React.PureComponent<{}, State> {\n  state: Readonly<State> = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  changeSortType = (sortType: SortType) => {\n    this.setState({ sortType });\n  };\n\n  changeOrder = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    const goods = getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            onClick={() => this.changeSortType(SortType.ALPHABET)}\n            className={cn('button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET })}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.changeSortType(SortType.LENGTH)}\n            className={cn('button is-success',\n              { 'is-light': sortType !== SortType.LENGTH })}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.changeOrder}\n            className={cn('button is-warning',\n              { 'is-light': !isReversed })}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE) && (\n            <button\n              onClick={this.reset}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map((good) => (\n              <li key={good} data-cy=\"Good\">\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}